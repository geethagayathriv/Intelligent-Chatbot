{"ast":null,"code":"import React from\"react\";import'./Messages.css';import Botmessage from\"../Bot/Botmessage\";import HumanMessage from\"../Human/HumanMessage\";import Buttons from\"../Options/scora_options\";import{useRef,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Messages=_ref=>{let{messages}=_ref;// const messagesEndRef = useRef(null);\n// const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n// };\n// useEffect(() => {\n//     scrollToBottom();\n// }, [messages]);\nconst formatTime=timestamp=>{const date=new Date(timestamp);const hours=date.getHours();const minutes=date.getMinutes();return\"\".concat(hours,\":\").concat(minutes<10?'0':'').concat(minutes);};return/*#__PURE__*/_jsxs(\"div\",{className:\"messages\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"initial-message\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(process.env.PUBLIC_URL,\"/bot_icon.jpg\"),className:\"message-avatar\"}),/*#__PURE__*/_jsx(\"div\",{className:\"start-message\",children:\"Hello! I'm here to help with any questions you have\"})]}),/*#__PURE__*/_jsx(Buttons,{}),messages.map((message,index)=>message.sender==='bot'?/*#__PURE__*/_jsx(Botmessage,{message:message.text,timestamp:formatTime(message.timestamp)}):/*#__PURE__*/_jsx(HumanMessage,{message:message.text,timestamp:formatTime(message.timestamp)}))]});};export default Messages;{/* <div ref={messagesEndRef}></div>  */}","map":{"version":3,"names":["React","Botmessage","HumanMessage","Buttons","useRef","useEffect","jsx","_jsx","jsxs","_jsxs","Messages","_ref","messages","formatTime","timestamp","date","Date","hours","getHours","minutes","getMinutes","concat","className","children","src","process","env","PUBLIC_URL","map","message","index","sender","text"],"sources":["C:/Users/HP/OneDrive/Documents/Projects/Intelligent-Chatbot/src/components/Messages/Messages.js"],"sourcesContent":["import React from \"react\";\r\nimport './Messages.css';\r\nimport Botmessage from \"../Bot/Botmessage\";\r\nimport HumanMessage from \"../Human/HumanMessage\";\r\nimport Buttons from \"../Options/scora_options\";\r\nimport { useRef,useEffect } from \"react\";\r\n\r\nconst Messages=({messages})=>{\r\n    // const messagesEndRef = useRef(null);\r\n\r\n    // const scrollToBottom = () => {\r\n    //     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     scrollToBottom();\r\n    // }, [messages]);\r\n    const formatTime=(timestamp)=>{\r\n        const date=new Date(timestamp);\r\n        const hours=date.getHours();\r\n        const minutes=date.getMinutes();\r\n        return `${hours}:${minutes<10?'0':''}${minutes}`\r\n    }\r\n\r\n    return(\r\n        <div className=\"messages\">\r\n            <div className=\"initial-message\">\r\n                <img src={`${process.env.PUBLIC_URL}/bot_icon.jpg`} className=\"message-avatar\"/>\r\n                <div className=\"start-message\">Hello! I'm here to help with any questions you have</div>\r\n            </div>\r\n            <Buttons />\r\n                {messages.map((message,index)=>(\r\n                    message.sender==='bot'?\r\n                    <Botmessage message={message.text} timestamp={formatTime(message.timestamp)}/>:\r\n                    <HumanMessage message={message.text} timestamp={formatTime(message.timestamp)}/>))}\r\n                    {/* <div className=\"loading-dots\">\r\n                {messages[messages.length - 1]?.sender === 'human' && '...'}\r\n            </div> */}\r\n               \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Messages\r\n\r\n\r\n\r\n{/* <div ref={messagesEndRef}></div>  */}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,gBAAgB,CACvB,MAAO,CAAAC,UAAU,KAAM,mBAAmB,CAC1C,MAAO,CAAAC,YAAY,KAAM,uBAAuB,CAChD,MAAO,CAAAC,OAAO,KAAM,0BAA0B,CAC9C,OAASC,MAAM,CAACC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzC,KAAM,CAAAC,QAAQ,CAACC,IAAA,EAAc,IAAb,CAACC,QAAQ,CAAC,CAAAD,IAAA,CACtB;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA,KAAM,CAAAE,UAAU,CAAEC,SAAS,EAAG,CAC1B,KAAM,CAAAC,IAAI,CAAC,GAAI,CAAAC,IAAI,CAACF,SAAS,CAAC,CAC9B,KAAM,CAAAG,KAAK,CAACF,IAAI,CAACG,QAAQ,CAAC,CAAC,CAC3B,KAAM,CAAAC,OAAO,CAACJ,IAAI,CAACK,UAAU,CAAC,CAAC,CAC/B,SAAAC,MAAA,CAAUJ,KAAK,MAAAI,MAAA,CAAIF,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAAE,MAAA,CAAGF,OAAO,EAClD,CAAC,CAED,mBACIV,KAAA,QAAKa,SAAS,CAAC,UAAU,CAAAC,QAAA,eACrBd,KAAA,QAAKa,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC5BhB,IAAA,QAAKiB,GAAG,IAAAH,MAAA,CAAKI,OAAO,CAACC,GAAG,CAACC,UAAU,iBAAgB,CAACL,SAAS,CAAC,gBAAgB,CAAC,CAAC,cAChFf,IAAA,QAAKe,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,qDAAmD,CAAK,CAAC,EACvF,CAAC,cACNhB,IAAA,CAACJ,OAAO,GAAE,CAAC,CACNS,QAAQ,CAACgB,GAAG,CAAC,CAACC,OAAO,CAACC,KAAK,GACxBD,OAAO,CAACE,MAAM,GAAG,KAAK,cACtBxB,IAAA,CAACN,UAAU,EAAC4B,OAAO,CAAEA,OAAO,CAACG,IAAK,CAAClB,SAAS,CAAED,UAAU,CAACgB,OAAO,CAACf,SAAS,CAAE,CAAC,CAAC,cAC9EP,IAAA,CAACL,YAAY,EAAC2B,OAAO,CAAEA,OAAO,CAACG,IAAK,CAAClB,SAAS,CAAED,UAAU,CAACgB,OAAO,CAACf,SAAS,CAAE,CAAC,CAAE,CAAC,EAKzF,CAAC,CAGd,CAAC,CAED,cAAe,CAAAJ,QAAQ,CAIvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}