{"ast":null,"code":"import'./App.css';import Header from'./components/Header/Header';import Messages from'./components/Messages/Messages';import Input from'./components/Input/Input';import Chatbotbox from'./components/chatbox/Chatbotbox';import{useEffect,useRef,useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[isChatboxOpen,setIsChatboxOpen]=useState(false);const[status,setSatus]=useState('Not Active');const[messages,setMessages]=useState([]);const[isLoading,setIsLoading]=useState(false);const inputRef=useRef();const messagesEndRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};useEffect(()=>{scrollToBottom();},[messages]);const toggleChatbox=()=>{setIsChatboxOpen(!isChatboxOpen);};useEffect(()=>{if(isChatboxOpen){setSatus('Active');}else{setSatus('Not Active');}},[isChatboxOpen]);const handleSend=async()=>{const userMessage=inputRef.current.value;if(!userMessage.trim())return;const newMessage=[...messages,{sender:'human',text:userMessage,timestamp:new Date().toISOString()}];setMessages(newMessage);inputRef.current.value=\"\";setIsLoading(true);console.log(messages);try{const endPoint='http://localhost:8000/chat';const response=await axios.post(endPoint,{question:userMessage});console.log(response);const botMessage={text:response.data.response,sender:'bot',timestamp:new Date().toISOString()};setMessages(prevMessages=>[...prevMessages,botMessage]);}catch(error){console.log('error sending message: ',error);}finally{setIsLoading(false);// Set loading state to false\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"wrapper \".concat(isChatboxOpen?'open':'closed'),children:[/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:/*#__PURE__*/_jsx(Header,{name:\"ChatBot\",status:status,closeChat:toggleChatbox})}),/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"main_content\",children:[/*#__PURE__*/_jsx(Messages,{messages:messages}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef}),isLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-dots\",children:\"...\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bottom\",children:/*#__PURE__*/_jsx(Input,{inputRef:inputRef,handleSend:handleSend})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chatbot_icon\",children:/*#__PURE__*/_jsx(Chatbotbox,{isOpen:isChatboxOpen,toggleChatbox:toggleChatbox})})]});}export default App;","map":{"version":3,"names":["Header","Messages","Input","Chatbotbox","useEffect","useRef","useState","axios","jsx","_jsx","jsxs","_jsxs","App","isChatboxOpen","setIsChatboxOpen","status","setSatus","messages","setMessages","isLoading","setIsLoading","inputRef","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","toggleChatbox","handleSend","userMessage","value","trim","newMessage","sender","text","timestamp","Date","toISOString","console","log","endPoint","response","post","question","botMessage","data","prevMessages","error","className","children","concat","name","closeChat","ref","isOpen"],"sources":["C:/Users/HP/OneDrive/Documents/Projects/Intelligent-Chatbot/src/App.js"],"sourcesContent":["import './App.css';\nimport Header from './components/Header/Header';\nimport Messages from './components/Messages/Messages';\nimport Input from './components/Input/Input';\nimport Chatbotbox from './components/chatbox/Chatbotbox';\nimport { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n\n    const [isChatboxOpen,setIsChatboxOpen]=useState(false)\n    const [status,setSatus]=useState('Not Active')\n    const [messages,setMessages]=useState([])\n    const [isLoading, setIsLoading] = useState(false);\n    const inputRef=useRef();  \n    const messagesEndRef = useRef(null); \n    const scrollToBottom = () => {\n      messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n    const toggleChatbox=()=>{\n      setIsChatboxOpen(!isChatboxOpen)\n    }\n    useEffect(()=>{\n      if(isChatboxOpen){\n        setSatus('Active');\n      }\n      else{\n        setSatus('Not Active')\n      }\n    },[isChatboxOpen]);\n\n    const handleSend=async()=>{\n      const userMessage=inputRef.current.value;\n      if(!userMessage.trim()) return;\n      const newMessage=[...messages,{sender:'human',text:userMessage,timestamp:new Date().toISOString()}];\n      setMessages(newMessage)\n      inputRef.current.value=\"\";\n      setIsLoading(true);\n      console.log(messages)\n      try{\n        const endPoint='http://localhost:8000/chat'\n        const response=await axios.post(endPoint,{\n          question: userMessage,\n      });\n        console.log(response)\n        const botMessage={\n          text:response.data.response,\n          sender:'bot',\n          timestamp:new Date().toISOString()\n        }\n        setMessages(prevMessages=>[...prevMessages,botMessage])\n      }\n      catch(error){\n        console.log('error sending message: ',error)\n      }\n      finally {\n        setIsLoading(false); // Set loading state to false\n      }\n    }\n\n  return (\n    <div className=\"App\">\n      <div className={`wrapper ${isChatboxOpen?'open':'closed'}`}>\n          <div className=\"content\">\n            <Header name=\"ChatBot\" status={status} closeChat={toggleChatbox}/>\n          </div>\n          <div className=\"main\">\n            <div className=\"main_content\">\n              <Messages messages={messages}/>\n              <div ref={messagesEndRef} />\n              {isLoading && <div className=\"loading-dots\">...</div>}\n            </div>\n            <div className=\"bottom\"> \n              <Input inputRef={inputRef} handleSend={handleSend}/>\n            </div>\n          </div>\n        </div>\n        <div className=\"chatbot_icon\">\n        <Chatbotbox isOpen={isChatboxOpen} toggleChatbox={toggleChatbox}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}