{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\Intelligent-Chatbot\\\\src\\\\components\\\\Messages\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './Messages.css';\n// import bot_icon from '../../image/bot_icon.jpg'\nimport Botmessage from \"../Bot/Botmessage\";\nimport HumanMessage from \"../Human/HumanMessage\";\nimport Buttons from \"../Options/scora_options\";\nimport { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = ({\n  messages\n}) => {\n  _s();\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    return `${hours}:${minutes < 10 ? '0' : ''}${minutes}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"initial-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${process.env.PUBLIC_URL}/bot_icon.jpg`,\n        className: \"message-avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start-message\",\n        children: \"Hi I am Scora your personal scora assistant. How can I help you?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), messages.map((message, index) => message.sender === 'bot' ? /*#__PURE__*/_jsxDEV(Botmessage, {\n      message: message.text,\n      timestamp: formatTime(message.timestamp)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(HumanMessage, {\n      message: message.text,\n      timestamp: formatTime(message.timestamp)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Messages, \"0epSoi03NVSoD0I0FiLK4iVNXOA=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","Botmessage","HumanMessage","Buttons","useRef","useEffect","jsxDEV","_jsxDEV","Messages","messages","_s","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","formatTime","timestamp","date","Date","hours","getHours","minutes","getMinutes","className","children","src","process","env","PUBLIC_URL","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","sender","text","ref","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/Intelligent-Chatbot/src/components/Messages/Messages.js"],"sourcesContent":["import React from \"react\";\r\nimport './Messages.css'\r\n// import bot_icon from '../../image/bot_icon.jpg'\r\nimport Botmessage from \"../Bot/Botmessage\";\r\nimport HumanMessage from \"../Human/HumanMessage\";\r\nimport Buttons from \"../Options/scora_options\";\r\nimport { useRef,useEffect } from \"react\";\r\n\r\nconst Messages=({messages})=>{\r\n    const messagesEndRef = useRef(null);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    };\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages]);\r\n    const formatTime=(timestamp)=>{\r\n        const date=new Date(timestamp);\r\n        const hours=date.getHours();\r\n        const minutes=date.getMinutes();\r\n        return `${hours}:${minutes<10?'0':''}${minutes}`\r\n    }\r\n\r\n    return(\r\n        <div className=\"messages\">\r\n            <div className=\"initial-message\">\r\n                <img src={`${process.env.PUBLIC_URL}/bot_icon.jpg`} className=\"message-avatar\"/>\r\n                <div className=\"start-message\">Hi I am Scora your personal scora assistant. How can I help you?</div>\r\n            </div>\r\n            <Buttons />\r\n                {messages.map((message,index)=>(\r\n                    message.sender==='bot'?\r\n                    <Botmessage message={message.text} timestamp={formatTime(message.timestamp)}/>:\r\n                    <HumanMessage message={message.text} timestamp={formatTime(message.timestamp)}/>))}\r\n                    <div ref={messagesEndRef} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Messages\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}