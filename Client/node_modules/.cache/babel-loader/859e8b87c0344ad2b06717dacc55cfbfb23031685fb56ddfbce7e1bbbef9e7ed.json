{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\Intelligent-Chatbot\\\\src\\\\components\\\\Messages\\\\Messages.js\";\nimport React from \"react\";\nimport './Messages.css';\n// import bot_icon from '../../image/bot_icon.jpg'\nimport Botmessage from \"../Bot/Botmessage\";\nimport HumanMessage from \"../Human/HumanMessage\";\nimport scora_options from \"../Options/scora_options\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = ({\n  messages\n}) => {\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    return `${hours}:${minutes < 10 ? '0' : ''}${minutes}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"initial-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${process.env.PUBLIC_URL}/bot_icon.jpg`,\n        className: \"message-avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start-message\",\n        children: \"Hi I am Scora your personal scora assistant. How can I help you?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), messages.map((message, index) => message.sender === 'bot' ? /*#__PURE__*/_jsxDEV(Botmessage, {\n      message: message.text,\n      timestamp: formatTime(message.timestamp)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(HumanMessage, {\n      message: message.text,\n      timestamp: formatTime(message.timestamp)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","Botmessage","HumanMessage","scora_options","jsxDEV","_jsxDEV","Messages","messages","formatTime","timestamp","date","Date","hours","getHours","minutes","getMinutes","className","children","src","process","env","PUBLIC_URL","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","sender","text","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/Intelligent-Chatbot/src/components/Messages/Messages.js"],"sourcesContent":["import React from \"react\";\r\nimport './Messages.css'\r\n// import bot_icon from '../../image/bot_icon.jpg'\r\nimport Botmessage from \"../Bot/Botmessage\";\r\nimport HumanMessage from \"../Human/HumanMessage\";\r\nimport scora_options from \"../Options/scora_options\";\r\n\r\nconst Messages=({messages})=>{\r\n    const formatTime=(timestamp)=>{\r\n        const date=new Date(timestamp);\r\n        const hours=date.getHours();\r\n        const minutes=date.getMinutes();\r\n        return `${hours}:${minutes<10?'0':''}${minutes}`\r\n    }\r\n\r\n    return(\r\n        <div className=\"messages\">\r\n            <div className=\"initial-message\">\r\n                <img src={`${process.env.PUBLIC_URL}/bot_icon.jpg`} className=\"message-avatar\"/>\r\n                <div className=\"start-message\">Hi I am Scora your personal scora assistant. How can I help you?</div>\r\n                \r\n            </div>\r\n                {messages.map((message,index)=>(\r\n                    message.sender==='bot'?\r\n                    <Botmessage message={message.text} timestamp={formatTime(message.timestamp)}/>:\r\n                    <HumanMessage message={message.text} timestamp={formatTime(message.timestamp)}/>))}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Messages\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB;AACA,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,aAAa,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,QAAQ,GAACA,CAAC;EAACC;AAAQ,CAAC,KAAG;EACzB,MAAMC,UAAU,GAAEC,SAAS,IAAG;IAC1B,MAAMC,IAAI,GAAC,IAAIC,IAAI,CAACF,SAAS,CAAC;IAC9B,MAAMG,KAAK,GAACF,IAAI,CAACG,QAAQ,CAAC,CAAC;IAC3B,MAAMC,OAAO,GAACJ,IAAI,CAACK,UAAU,CAAC,CAAC;IAC/B,OAAQ,GAAEH,KAAM,IAAGE,OAAO,GAAC,EAAE,GAAC,GAAG,GAAC,EAAG,GAAEA,OAAQ,EAAC;EACpD,CAAC;EAED,oBACIT,OAAA;IAAKW,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBZ,OAAA;MAAKW,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BZ,OAAA;QAAKa,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,UAAW,eAAe;QAACL,SAAS,EAAC;MAAgB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAChFpB,OAAA;QAAKW,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAgE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpG,CAAC,EACDlB,QAAQ,CAACmB,GAAG,CAAC,CAACC,OAAO,EAACC,KAAK,KACxBD,OAAO,CAACE,MAAM,KAAG,KAAK,gBACtBxB,OAAA,CAACJ,UAAU;MAAC0B,OAAO,EAAEA,OAAO,CAACG,IAAK;MAACrB,SAAS,EAAED,UAAU,CAACmB,OAAO,CAAClB,SAAS;IAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,gBAC9EpB,OAAA,CAACH,YAAY;MAACyB,OAAO,EAAEA,OAAO,CAACG,IAAK;MAACrB,SAAS,EAAED,UAAU,CAACmB,OAAO,CAAClB,SAAS;IAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzF,CAAC;AAGd,CAAC;AAAAM,EAAA,GAtBKzB,QAAQ;AAwBd,eAAeA,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}