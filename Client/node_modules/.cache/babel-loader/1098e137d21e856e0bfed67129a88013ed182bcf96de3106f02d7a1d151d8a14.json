{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\myreactnotes\\\\chatbot\\\\src\\\\components\\\\Messages\\\\Messages.js\";\nimport React from \"react\";\n// import { useState,useRef } from \"react\";\nimport './Messages.css';\nimport bot_icon from '../../image/bot_icon.jpg';\nimport user from '../../image/user.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = ({\n  messages\n}) => {\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    return ``;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message bot-message\",\n      children: \"Hi I am chitti. How can I help you?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.sender === \"bot\" ? \"bot-message\" : \"human-message\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","bot_icon","user","jsxDEV","_jsxDEV","Messages","messages","formatTime","timestamp","date","Date","hours","getHours","minutes","getMinutes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","sender","text","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/myreactnotes/chatbot/src/components/Messages/Messages.js"],"sourcesContent":["import React from \"react\";\r\n// import { useState,useRef } from \"react\";\r\nimport './Messages.css'\r\nimport bot_icon from '../../image/bot_icon.jpg'\r\nimport user from '../../image/user.png'\r\n\r\nconst Messages=({messages})=>{\r\n    const formatTime=(timestamp)=>{\r\n        const date=new Date(timestamp);\r\n        const hours=date.getHours();\r\n        const minutes=date.getMinutes();\r\n        return ``\r\n    }\r\n    return(\r\n        <div className=\"messages\">\r\n            <div className=\"message bot-message\">Hi I am chitti. How can I help you?</div>\r\n           {messages.map((message,index)=>(\r\n            <div key={index} className={`message ${message.sender===\"bot\"?\"bot-message\":\"human-message\"}`}>\r\n                <div>{message.text}</div>\r\n            </div>\r\n           ))}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Messages"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAO,gBAAgB;AACvB,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,IAAI,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAACA,CAAC;EAACC;AAAQ,CAAC,KAAG;EACzB,MAAMC,UAAU,GAAEC,SAAS,IAAG;IAC1B,MAAMC,IAAI,GAAC,IAAIC,IAAI,CAACF,SAAS,CAAC;IAC9B,MAAMG,KAAK,GAACF,IAAI,CAACG,QAAQ,CAAC,CAAC;IAC3B,MAAMC,OAAO,GAACJ,IAAI,CAACK,UAAU,CAAC,CAAC;IAC/B,OAAQ,EAAC;EACb,CAAC;EACD,oBACIV,OAAA;IAAKW,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBZ,OAAA;MAAKW,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAC;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC9Ed,QAAQ,CAACe,GAAG,CAAC,CAACC,OAAO,EAACC,KAAK,kBAC3BnB,OAAA;MAAiBW,SAAS,EAAG,WAAUO,OAAO,CAACE,MAAM,KAAG,KAAK,GAAC,aAAa,GAAC,eAAgB,EAAE;MAAAR,QAAA,eAC1FZ,OAAA;QAAAY,QAAA,EAAMM,OAAO,CAACG;MAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC,GADnBG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGd,CAAC;AAAAM,EAAA,GAlBKrB,QAAQ;AAoBd,eAAeA,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}