{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\myreactnotes\\\\chatbot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Messages from './components/Messages/Messages';\nimport Input from './components/Input/Input';\nimport Chatbotbox from './components/chatbox/Chatbotbox';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const checkStatus=e=>{\n  //   let isActive=true\n  //   const status=document.querySelector(\".status\");\n  //   if(isActive==true){\n  //     status.innerHTML=\"Active\";\n  //     status.style.color=\"green\"\n  //   }\n  //   else\n  //   {\n  //     status.innerHTML=\"Not Active\";\n  //     status.style.color=\"red\";\n  //   }\n  // }\n  const [isChatboxOpen, setIsChatboxOpen] = useState(false);\n  const toggleChatbox = () => {\n    setIsChatboxOpen(!isChatboxOpen);\n  };\n  useEffect(() => {\n    const status = document.querySelector(\".status\");\n    if (isChatboxOpen) {\n      status.innerHTML = \"Active\";\n      status.style.color = \"green\";\n    } else {\n      status.innerHTML = \"Not Active\";\n      status.style.color = \"red\";\n    }\n  }, [isChatboxOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot_icon\",\n      children: /*#__PURE__*/_jsxDEV(Chatbotbox, {\n        isOpen: isChatboxOpen,\n        toggleChatbox: toggleChatbox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QSQq8O6AlKIAxWzhTJ6TZgV0gG0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Messages","Input","Chatbotbox","useEffect","useState","jsxDEV","_jsxDEV","App","_s","isChatboxOpen","setIsChatboxOpen","toggleChatbox","status","document","querySelector","innerHTML","style","color","className","children","isOpen","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/myreactnotes/chatbot/src/App.js"],"sourcesContent":["import './App.css';\nimport Header from './components/Header/Header';\nimport Messages from './components/Messages/Messages';\nimport Input from './components/Input/Input';\nimport Chatbotbox from './components/chatbox/Chatbotbox';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  // const checkStatus=e=>{\n  //   let isActive=true\n  //   const status=document.querySelector(\".status\");\n  //   if(isActive==true){\n  //     status.innerHTML=\"Active\";\n  //     status.style.color=\"green\"\n  //   }\n  //   else\n  //   {\n  //     status.innerHTML=\"Not Active\";\n  //     status.style.color=\"red\";\n  //   }\n  // }\n    const [isChatboxOpen,setIsChatboxOpen]=useState(false)\n    const toggleChatbox=()=>{\n      setIsChatboxOpen(!isChatboxOpen)\n    }\n    useEffect(()=>{\n      const status=document.querySelector(\".status\");\n      if(isChatboxOpen){\n        status.innerHTML=\"Active\";\n        status.style.color=\"green\";\n      }\n      else\n      {\n        status.innerHTML=\"Not Active\";\n        status.style.color=\"red\";\n      }\n    },[isChatboxOpen]);\n  return (\n    <div className=\"App\">\n      \n      <div className=\"chatbot_icon\">\n        <Chatbotbox isOpen={isChatboxOpen} toggleChatbox={toggleChatbox}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,UAAU,MAAM,iCAAiC;AACxD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,MAAM,CAACC,aAAa,EAACC,gBAAgB,CAAC,GAACN,QAAQ,CAAC,KAAK,CAAC;EACtD,MAAMO,aAAa,GAACA,CAAA,KAAI;IACtBD,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EACDN,SAAS,CAAC,MAAI;IACZ,MAAMS,MAAM,GAACC,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;IAC9C,IAAGL,aAAa,EAAC;MACfG,MAAM,CAACG,SAAS,GAAC,QAAQ;MACzBH,MAAM,CAACI,KAAK,CAACC,KAAK,GAAC,OAAO;IAC5B,CAAC,MAED;MACEL,MAAM,CAACG,SAAS,GAAC,YAAY;MAC7BH,MAAM,CAACI,KAAK,CAACC,KAAK,GAAC,KAAK;IAC1B;EACF,CAAC,EAAC,CAACR,aAAa,CAAC,CAAC;EACpB,oBACEH,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,eAElBb,OAAA;MAAKY,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3Bb,OAAA,CAACJ,UAAU;QAACkB,MAAM,EAAEX,aAAc;QAACE,aAAa,EAAEA;MAAc;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAtCQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}